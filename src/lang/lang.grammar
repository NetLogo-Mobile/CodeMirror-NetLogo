@precedence {
  cut @cut,
  paren @left,
  open @left,
  close @right,
  leftArgs @left,
  lastArgs @left,
  rightArgs @right,
  exponent @right,
  times @left,
  plus @left,
  comparative @left
}

@top Program { 
  Normal {
    (globalStatement | Misplaced ~statement | Procedure)*
  } |
  OnelineReporter {
    ReporterStatement | Value
  } |
  Embedded {
    (CommandStatement ~statement | OpenParen CommandStatement CloseParen)+
  }
}

@detectDelim

@skip { space | LineComment }

globalStatement {
  Extensions { ExtensionStr OpenBracket Identifier* CloseBracket } |

  Globals { GlobalStr OpenBracket Identifier* CloseBracket  } |

  Breed { BreedStr OpenBracket BreedPlural BreedSingular !cut CloseBracket } |

  BreedsOwn {
    Own OpenBracket Identifier* CloseBracket
  }
}

Misplaced {
  CommandStatement
}

specialReportersCommands {
  SpecialReporter0Args |
  SpecialReporter1Args |
  SpecialReporter2Args |
  SpecialReporter3Args |
  SpecialReporter4Args |
  SpecialReporter5Args |
  SpecialReporter6Args |
  SpecialReporter1ArgsBoth |
  SpecialReporter0ArgsLink |
  SpecialReporter1ArgsLink |
  SpecialReporter2ArgsTurtle |
  SpecialReporter0ArgsTurtle |
  SpecialReporter1ArgsTurtle |
  SpecialReporter0ArgsLinkP |
  SpecialCommand0Args |
  SpecialCommand1Args |
  SpecialCommand2Args |
  SpecialCommand3Args |
  SpecialCommand4Args |
  SpecialCommand5Args |
  SpecialCommand6Args |
  SpecialCommandCreateTurtle |
  SpecialCommandCreateLink
}

BreedDeclarative {
  BreedStr | BreedToken
}

BreedSingular {
  Identifier | SpecialReporter1Args
}

BreedPlural {
  Identifier | SpecialReporter1Args | Reporter0Args
}

BreedVars {
  Identifier | BreedFirst | BreedMiddle | BreedLast
}

Procedure {
  To ProcedureName Arguments? ProcedureContent* End
}

ProcedureName {
  Identifier
}

ProcedureContent {
  CommandStatement |
  OpenParen CommandStatement CloseParen |
  Error {globalStatement | BreedToken OpenBracket BreedPlural BreedSingular CloseBracket} ~statement
}

ReporterContent {
  ReporterStatement ~statement |
  OpenParen ReporterStatement !close CloseParen
}

VariableDeclaration {
  NewVariableDeclaration |
  SetVariable
}

NewVariableDeclaration {
  Let (Identifier | UnsupportedPrim) Value |
  Let (Identifier | UnsupportedPrim) ReporterStatement
}

SetVariable {
  Set VariableName Value |
  Set VariableName ReporterStatement
}

VariableName {
  Identifier ~statement | 
  PatchVar | 
  TurtleVar | 
  LinkVar |
  BreedToken |
  UnsupportedPrim ~statement
}

Arg {  
  Value ~statement |
  ReporterContent ~statement |
  ReporterBlock |
  Property
}

Value {
  OpenParen !open Value !close CloseParen |
  List |
  CodeBlock |
  VariableName |
  Literal |
  AnonymousProcedure
}

Literal {
  Numeric ~literal |
  String ~literal |
  Constant ~literal
}

Arguments {
  OpenBracket (Identifier|UnsupportedPrim)* ~bebracket CloseBracket ~endbracket
}

AnonArguments {
  Arguments | (Identifier|UnsupportedPrim)* ~bebracket
}

List { 
  OpenBracket (List | Literal | Identifier)* ~bebracket CloseBracket ~endbracket
}

CodeBlock[@dynamicPrecedence=-1] { 
  OpenBracket (List | CodeBlock | ProcedureContent | Literal | Identifier)* ~bebracket CloseBracket ~endbracket
}

ReporterBlock {
  OpenBracket ReporterContent !close ~bebracket CloseBracket ~endbracket |
  OpenBracket Value !close ~bebracket CloseBracket ~endbracket
}

Property {
  OpenBracket VariableName !close ~bebracket CloseBracket ~endbracket
}

AnonymousProcedure {
  OpenBracket ~opbracket AnonArguments Arrow (ProcedureContent*|ReporterContent*|Value) ~bebracket CloseBracket ~endbracket
}

ShortAnonymousProcedure {
  OpenBracket ~opbracket (ProcedureContent*|ReporterContent*|Value) ~bebracket CloseBracket ~endbracket
}

ReporterStatement { 
  OpenParen ReporterStatement !close CloseParen |
  OpenParen ReporterLeft1ArgsOpt !lastArgs Arg CloseParen |
  Arg !leftArgs (ReporterLeft1Args | ReporterLeft1ArgsOpt) !lastArgs Arg |
  Arg !leftArgs ReporterLeft2Args Arg !lastArgs Arg |
  SpecialReporter0Args | SpecialReporter0ArgsLink | SpecialReporter0ArgsTurtle | SpecialReporter0ArgsLinkP | UnsupportedPrim|
  (Reporter1Args | SpecialReporter1Args | SpecialReporter1ArgsTurtle | SpecialReporter1ArgsLink | SpecialReporter1ArgsBoth) !lastArgs Arg |
  (Reporter2Args | SpecialReporter2Args | SpecialReporter2ArgsTurtle) Arg !lastArgs Arg |
  (Reporter3Args | SpecialReporter3Args) Arg Arg !lastArgs Arg |
  (Reporter4Args | SpecialReporter4Args) Arg Arg Arg !lastArgs Arg |
  (Reporter5Args |  SpecialReporter5Args) Arg Arg Arg Arg !lastArgs Arg |
  (Reporter6Args | SpecialReporter6Args) Arg Arg Arg Arg Arg !lastArgs Arg |
  Reporter0Args |
  (Reporter0ArgsVar) !lastArgs Arg* ~statement |
  (Reporter1ArgsVar | Reporter1ArgsVar0) !lastArgs Arg+ |
  (Reporter2ArgsVar | Reporter2ArgsVar0) Arg !lastArgs Arg+ |
  Reporter3ArgsVar Arg Arg !lastArgs Arg+ |
  Reporter4ArgsVar Arg Arg Arg !lastArgs Arg+ |
  Reporter5ArgsVar Arg Arg Arg Arg !lastArgs Arg+ |
  Reporter6ArgsVar Arg Arg Arg Arg Arg !lastArgs Arg+ |
  Arg !comparative AndOr Arg |
  APReporter Reporters !lastArgs Arg |
  APReporterFlip Arg !lastArgs Reporters |
  APReporterVar Reporters !lastArgs Arg+
}

CommandStatement {
  SpecialCommand0Args | Command0Args |
  UnsupportedPrim ~statement |
  (Command1Args | SpecialCommand1Args) !lastArgs Arg |
  (Command2Args | SpecialCommand2Args) Arg !lastArgs Arg |
  (Command3Args | SpecialCommand3Args) Arg Arg !lastArgs Arg |
  (Command4Args | SpecialCommand4Args) Arg Arg Arg !lastArgs Arg |
  (Command5Args | SpecialCommand5Args) Arg Arg Arg Arg !lastArgs Arg |
  (Command6Args | SpecialCommand6Args) Arg Arg Arg Arg Arg !lastArgs Arg |
  Turtle[@dynamicPrecedence=10] { SpecialCommandCreateTurtle Arg !lastArgs Arg? } |
  Link[@dynamicPrecedence=10] { SpecialCommandCreateLink Arg !lastArgs Arg? } |
  Command0ArgsVar !lastArgs Arg* ~statement |
  Command1ArgsVar !lastArgs Arg+ |
  Command2ArgsVar Arg !lastArgs Arg+ |
  (Command3ArgsVar | Command3ArgsVar2) Arg Arg !lastArgs Arg+ |
  Command4ArgsVar Arg Arg Arg !lastArgs Arg+ |
  Command5ArgsVar Arg Arg Arg Arg !lastArgs Arg+ |
  Command6ArgsVar Arg Arg Arg Arg Arg !lastArgs Arg+ |
  VariableDeclaration |
  Unsupported |
  APCommand !leftArgs Arg+ !lastArgs Commands
}

Commands {
  SpecialCommand | 
  Command0Args |
  Command1Args |
  Command2Args |
  Command3Args |
  Command4Args |
  Command5Args |
  Command6Args |
  Command0ArgsVar |
  Command1ArgsVar |
  Command2ArgsVar |
  Command3ArgsVar |
  Command4ArgsVar |
  Command5ArgsVar |
  Command6ArgsVar |
  Command3ArgsVar2 |
  SpecialCommand0Args |
  SpecialCommand1Args |
  SpecialCommand2Args |
  SpecialCommand3Args |
  SpecialCommand4Args |
  SpecialCommand5Args |
  SpecialCommand6Args |
  SpecialCommandCreateTurtle |
  SpecialCommandCreateLink |
  AnonymousProcedure ~statement |
  ShortAnonymousProcedure |
  Identifier ~statement
}

Reporters {
  Reporter0Args |
  Reporter1Args |
  Reporter2Args |
  Reporter3Args |
  Reporter4Args |
  Reporter5Args |
  Reporter6Args |
  Reporter0ArgsVar |
  Reporter1ArgsVar |
  Reporter2ArgsVar |
  Reporter3ArgsVar |
  Reporter4ArgsVar |
  Reporter5ArgsVar |
  Reporter6ArgsVar |
  Reporter2ArgsVar0 |
  Reporter1ArgsVar0 |
  ReporterLeft1ArgsOpt |
  ReporterLeft1Args |
  ReporterLeft2Args !leftArgs |
  SpecialReporter0Args |
  SpecialReporter1Args |
  SpecialReporter2Args |
  SpecialReporter3Args |
  SpecialReporter4Args |
  SpecialReporter5Args |
  SpecialReporter6Args |
  SpecialReporter1ArgsBoth |
  SpecialReporter0ArgsLink |
  SpecialReporter1ArgsLink |
  SpecialReporter2ArgsTurtle |
  SpecialReporter0ArgsTurtle |
  SpecialReporter1ArgsTurtle |
  SpecialReporter0ArgsLinkP |
  AnonymousProcedure |
  ShortAnonymousProcedure |
  Identifier
}

@tokens {

  MultiplyDivide {"*" |"/"}

  Exponent {"^"}

  Numeric { $[-]? $[0-9]+ $[\.]? $[0-9]* ($[e] ($[+] | $[-])? $[0-9]+)? | $[-]? $[\.] $[0-9]+ ($[e] ($[+] | $[-])? $[0-9]+)?}
  
  String { '"' (!["\\] | "\\" _)* '"' }

  LineComment { ";" ![\n]* }

  space { $[ \t\n\r]+ }
  
  OpenBracket { "[" }
  
  CloseBracket { "]" }

  Arrow { "->" }

  Comparative { "=" | "!=" | ">" | "<" | "<=" | ">="}

  OpenParen { "(" }

  CloseParen { ")" }

  "[" "]"

}

expression {
  OpenParen expression CloseParen |
  Identifier |
  Command |
  Reporter |
  Numeric |
  String |
  Constant |
  TurtleVar |
  PatchVar |
  LinkVar |
  Unsupported
}

@external tokens keyword from "./tokenizer.js" { 
  ReporterLeft1Args,
  ReporterLeft2Args,
  ReporterLeft1ArgsOpt,  
  GlobalStr, 
  ExtensionStr, 
  BreedStr, 
  PlusMinus,
  Own, 
  Set, 
  Let, 
  To, 
  End, 
  And,
  Or,
  Identifier, 
  Directive,
  Command, 
  Reporter, 
  Extension, 
  TurtleVar, 
  PatchVar, 
  LinkVar, 
  Constant, 
  Unsupported,
  SpecialReporter,
  SpecialCommand,
  BreedToken,
  AndOr,
  APCommand,
  APReporterFlip,
  APReporterVar,
  APReporter,
  UnsupportedPrim
}

@external specialize {Reporter} specializeReporter from './specializer' {
  Reporter0Args,
  Reporter1Args, 
  Reporter2Args, 
  Reporter3Args, 
  Reporter4Args,
  Reporter5Args,
  Reporter6Args,
  Reporter0ArgsVar,
  Reporter1ArgsVar, 
  Reporter2ArgsVar, 
  Reporter3ArgsVar, 
  Reporter4ArgsVar,
  Reporter5ArgsVar,
  Reporter6ArgsVar,
  Reporter2ArgsVar0,
  Reporter1ArgsVar0
}

@external specialize {SpecialReporter} specializeSpecialReporter from './specializer' {
  SpecialReporter0Args,
  SpecialReporter1Args,
  SpecialReporter2Args,
  SpecialReporter3Args,
  SpecialReporter4Args,
  SpecialReporter5Args,
  SpecialReporter6Args,
  SpecialReporter1ArgsBoth,
  SpecialReporter0ArgsLink,
  SpecialReporter1ArgsLink,
  SpecialReporter2ArgsTurtle,
  SpecialReporter0ArgsTurtle,
  SpecialReporter1ArgsTurtle,
  SpecialReporter0ArgsLinkP
}

@external specialize {Command} specializeCommand from './specializer' {
  Command0Args,
  Command1Args, 
  Command2Args, 
  Command3Args, 
  Command4Args,
  Command5Args,
  Command6Args,
  Command0ArgsVar,
  Command1ArgsVar, 
  Command2ArgsVar, 
  Command3ArgsVar, 
  Command4ArgsVar,
  Command5ArgsVar,
  Command6ArgsVar,
  Command3ArgsVar2
}

@external specialize {SpecialCommand} specializeSpecialCommand from './specializer' {
  SpecialCommand0Args,
  SpecialCommand1Args,
  SpecialCommand2Args,
  SpecialCommand3Args,
  SpecialCommand4Args,
  SpecialCommand5Args,
  SpecialCommand6Args,
  SpecialCommandCreateTurtle,
  SpecialCommandCreateLink
}

@external prop context from './props'
@context contextTracker from './context-tracker'