globals
[
  is-stopped?          ; flag to specify if the model is stopped
  blue-size
  blue-aggression
  blue-start-energy
  Add
  evaporation-rate
  red-size
  red-aggression
  red-start-energy
]

breed [flowers flower] ; the main food source
breed [nests nest]     ; the ants' home, where they bring food to and are born
breed [ants ant]       ; the red and blue ants
breed [queens queen]   ; the reproductive flying ants that found new colonies
breed [males male]     ; the queens' mates, required only for founding new colonies
breed [gasters gaster] ; part of the HUD display of ants
breed [boxes box]      ; the graphical element that holds the two HUD displayed ants in the top right and left of the model
breed [demos demo]     ; the other part of the HUD display



turtles-own
[
  age                  ; an ant's age
  team                 ; an ant's team
]

patches-own
[
  chemical             ; amount of chemical on this patch
  nest?                ; true on nest patches, false elsewhere
  my-color             ; determines an ant's team
  is-food?             ; whether a patch contains food
]

ants-own
[
  energy               ; each ant has energy, they die if energy is 0
  mother               ; stores the ant's mother nest
  has-food?            ; whether the ant is carrying food
  prey                 ; the target of the ant
  fighting?            ; whether this ant is currently in a fight
]


nests-own
[
  food-store            ; the total food stored inside the nest
  mother                ; stores the nest's mother nest
]

queens-own
[
  food-store            ; queens carry some food with them in fat on their body to found the new nest
]

;; setting up the model ;;
to startup  ; launches setup when the application starts
  setup
end

to setup    ; sets up two colonies in fixed locations in the world, each with 10 ants that belong to each nest
  clear-all
  initialize
  create-HUD-display-of-ants
  reset-ticks
end

to initialize ; sets up the colonies, initial flowers, grass, and gives each nest 10 ants
  set is-stopped? false
  ask patches
  [
    set nest?  false
    set is-food? false
    set my-color green - 1 set pcolor green - 1
  ]
  flowering 45 1 ; makes 45 flowers
  make-nest 1 -24 8  cyan "blue-team" ; place a blue colony
  make-nest 1 27 -7 red "red-team"      ; place a red colony
  ask nests [ hatched-ant 10 ]          ; give each colony 10 ants
  set-default-shape nests "anthill"
  ask turtles [ set age  1 ] ; keeps track of all turtles age
end
;; the model loop ;;
; Every time step ants move produce. Ants without food die, and nests without ants die.

to go                         ; repeats every time step, because the go button in the interface is set to forever.
  move-ants                   ; moves ants
  create-more-ants            ; produces more ants
  touch-input                 ; handles user touch inputs on view.
  paint-pheromone             ; recolors view from changes of pheromone level on each patch.
  flowering 1 500             ; grows more flowers for the ants to eat
  diffusion-pheromone         ; slowly evaporate pheromone trails
  death                       ; checks if ants die due to old age
  move-winged-ants            ; moves reproductive ants (queens and males), found a new colony if they run into each other.
  kill-empty-nest             ; removes nests with no ants left in them
  show-nest-food              ; places a label of food stored on nests
  go-into-nest                ; hides ants when they approach nests to simulate going inside
  control-heads-up-display-of-ants
  tick
end

;; movement procedures ;;
to move-ants ; moves ants
  ask ants
  [
    ifelse fighting? = false [ ; if the ant is not fighting
      any-body-here-to-fight? ; check if their is an ant to fight
      ifelse shape = "ant" ; if an ant
        ; and not carrying food? look for it
        [ look-for-food ]
        [ return-to-nest ] ; carrying food? take it back to nest
      wiggle ; performs a random walk to explore the map
      fd 1
    ]
    [
      blue-attack ; run attack for blue ants
      red-attack   ; run attack for red ants
      continue-fight  ; if in a fight, keep fighting
    ]
  ]
end


to move-winged-ants ; Moves winged ants. And if in an area they can found a colony, founds a colony.
  ask queens
  [
    wiggle
    fd 1
    ; makes nests in allowable areas: five patches from any other nest, and not under the black boxes in the top left and right.
    if not any? nests in-radius 5 and not any? boxes in-radius 10 [ found-colony ]
  ]
  ask males
  [
    wiggle
    fd 1
  ]
end


to return-to-nest  ; turtle procedure to return to the nest if the ant has found food

  ifelse nest?     ; if ant has food and is at their nest, drop off the food
  [
    set shape "ant"
    let delivery-point one-of nests in-radius 2

    if delivery-point != nobody
    [
      ask delivery-point [set food-store food-store + 1] ; drop food and head out again
      rt 180
      set has-food? false
    ]
  ]
  [
    set chemical chemical + 60  ; else, drop some chemical
     ; go back toward the location of the home nest with the possibility of stopping at another nest if it interrupts the path
    if mother != nobody [ face mother ]
  ]
end

to look-for-food ; turtle procedure
  if [is-food?] of patch-here = true
  [
    set energy energy + 1000    ; ant feeds herself
    rt 180                      ; and turns around to bring food back to the larva in the colony
    pickup-food-here
  ]

  ; move towards highest chemical load
  if (chemical >= 0.05) [ uphill-chemical ]
end

to pickup-food-here ; turtle procedure
  if has-food? = false
  [
    if shape = "ant" [ set shape "ant-has-food" ]
    let food-radius 2
    if any? flowers in-radius food-radius
    [
      ask one-of flowers in-radius food-radius
      [
        ; sets the shape of the flower to one less petal everytime an ant harvest it. The flower dies when it loses all of its pedals.
        (ifelse
          shape = "flower"  [ set shape "flower2" ]
          shape = "flower2" [ set shape "flower3" ]
          shape = "flower3" [ set shape "flower4" ]
          shape = "flower4" [ set shape "flower5" ]
          shape = "flower5" [ set shape "flower6" ]
          shape = "flower6" [ set shape "flower7" ]
          shape = "flower7" [ set shape "flower8" ]
          shape = "flower8" or shape = "flower-long8"
          [
            ask patch-here
            [
              set is-food? false
              ask neighbors [ set is-food? false ]
            ]
            die
          ]
        )
      ]
    ]
  ]
end

to wiggle  ; turtle procedure. randomly turns ants within a 80 degree arc in the direction the ant is heading
  rt random 40
  lt random 40
  if not can-move? 1 [ rt 180 ]
end

to found-colony   ; turtle procedure.
                  ; The males dies and the queen burrows into the ground and makes a nest.

  let mate one-of males in-radius 7  ;Makes new colonies of ants.

  if mate != nobody [
    if [breed] of mate = males
    [
      if [color] of mate != color ;  When a female meets a male of a different color,
      [
        hatch-nests 1   ; they mate.
        [
          set mother self ; sets the colony's ID to the hatched agent so that its workers can check belonging against the mother
          set color [color] of mate
          hatched-ant 4

          set size 20
          set shape "anthill"
          ask patch-here
          [
            set nest? true
            ask neighbors [ set nest? true ]
          ]
        ]
        ask mate [ die ]
        die
      ]
    ]
  ]
end

;; reproduction procedures;;
to create-more-ants ; births some ants
  ask nests
  [ ; for red colonies, if the stored food greater than the cost to feed a baby ant to adulthood, make another ant
    if color = red   [ if food-store > red-build-cost   [ birth ] ]
    ; for blue colonies, if the stored food greater than the cost to feed a baby ant to adulthood, make another ant
    if color = cyan [ if food-store > blue-build-cost [ birth ] ]
  ]
end

to produce-gynes [some-males some-females] ; produces reproduces males and females that fly about and found-new colonies.
  hatch-males some-males    [ set shape "butterfly" set size 5  set age 0 set label "" set age 0] ; creates some males
  hatch-queens some-females [ set shape "queens"    set size 10 set age 0 set label "" set age 0] ; creates some females
  set food-store food-store - 50 ; reduces the colony's food by  50. Wow that's a lot of food for just one ant!
end

to birth
  ifelse ticks mod 100 = 1 ; once in 100 ticks, reproduce, if there is enough food.
    [ produce-gynes 1 1 ]
    [ hatched-ant 1 ]

  if color = red   [ set food-store food-store - red-build-cost ]
  if color = cyan [ set food-store food-store - blue-build-cost ]
end

to hatched-ant [ some-ants ] ; turtle procedure. This procedure hatches some ants, called by nests.

  hatch-ants some-ants
  [
    ifelse color = red
      [ set energy red-start-energy]
      [ set energy blue-start-energy]
    set mother myself
    set fighting? false
    set shape "ant"
    set has-food? false
    ifelse color = red
      [ set size red-size ]
      [ set size blue-size ]
    set label ""
    set age 0
    set prey nobody
  ]
end

to make-nest [numb x y a-color a-team] ; Creates a nest at a location, of a team, and color.
  create-nests numb [
    setxy x y
    set size 20
    set shape "anthill"
    set nest? true
    set color a-color
    set team a-team
    ask neighbors [ set nest? true ]
    ask patch-here [ set plabel precision [food-store] of myself 1 ]

    set mother self ; a way to compare to their foragers to see if they are of the same nest (something real ants do with hydrocarbons on their skin)
  ]
end

;; death procedures ;;
to death ; check to see if turtles will die,
  ask ants
  [
    set energy energy - 5 + (1 - (blue-aggression / 100))
    if energy - (age) <= 0 [ die ]
  ]

  ask nests ; eats some of the stored food
  [
    set food-store food-store - 0.001
    if food-store < -100 [ die ]
  ]

  ; increment turtles age by 1 each time step
  ask turtles [ set age age + 1 ]
end

to kill-empty-nest ; If the ants of the new nest don't return food before they all die (fail to found) the colony dies

  ask nests
  [
    if not any? ants with [mother = [mother] of myself]
    [
      ask patch-here
      [
        set nest? false
        ask neighbors [ set nest? false ]
      ]

      ask patch-at 0 -7 [set plabel ""]
      die
    ]
  ]
end

;; following pheromone procedures ;;
to uphill-chemical  ; turtle procedure. sniff left and right, and go where the strongest smell is
  let scent-ahead chemical-scent-at-angle   0
  let scent-right chemical-scent-at-angle  45
  let scent-left  chemical-scent-at-angle -45
  if (scent-right > scent-ahead) or (scent-left > scent-ahead)
  [
    ifelse scent-right > scent-left
      [ rt 45 ]
      [ lt 45 ]
  ]
end

to-report chemical-scent-at-angle [angle] ; reports the amount of pheromone in a certain direction
  let p patch-right-and-ahead angle 1
  if p = nobody [ report 0 ]
  report [chemical] of p
end

to diffusion-pheromone ; adjusted the level of chemical each tick
  diffuse chemical (20 / 100)
  ask patches
  [
    set chemical chemical * (100 - (evaporation-rate )) / 100
    if chemical < 1 [ set chemical 0 ]
  ]
end

;; fight procedures;;
to any-body-here-to-fight? ; turtle procedure. Checks for other ants nearby of the other team, and makes sure the list isn't empty

  if any? other ants in-radius 1 with [team != [team] of myself] != nobody
  [ ; checks to make sure there are some other ants here
    ifelse any? other ants in-radius 1 with [team != [team] of myself]
      [ set fighting? true ] ; then fight them
      [ set fighting? false ]
  ]
end

to attack ; turtle procedure that checks if the ant it fighting, and the prey ant isn't of this ants colony, then  run away, and try to kill the ant, or stop fighting
  if prey != nobody
  [
    if fighting? = true
    [
      set prey one-of other ants-here with [team != [team] of myself]

      if prey != nobody
      [
        ask prey [ face myself ]

        if [breed] of prey = ants
        [
          if [team] of prey != team
          [
            let choice random 2
            ask prey
            [
              set chemical chemical + 60
              (ifelse
                choice = 0
                [
                  back 3 rt 90 ; backs off
                  set fighting? false
                  if random [size] of prey < random [size] of myself [die] ; and tries to kill the ant based on the size
                ]

                choice = 1 [set fighting? false] ; stop fighting
              )
            ]
          ]
        ]
      ]
    ]
  ]
end

to blue-attack ; turtle procedure calculates the blue aggression and if high enough to surpass a randomly generated number, the ant attacks this tick.
  ask ants with [team = "blue-team"] [ if blue-aggression > random 100 [ attack ] ]
end

to red-attack ; turtle procedure calculates the blue aggression and if high enough to surpass a randomly generated number, the ant attacks this tick.
  ask ants with [team = "red-team"]   [ if red-aggression > random 100 [ attack ] ]
end

to continue-fight ; handles what happens after each fight
  wiggle
  fd 1
  ask patch-here [set chemical chemical + 15]
  ifelse any? other ants in-radius 1 with [team != [team] of myself]
    [ face one-of other ants in-radius 1 ]
    [ set fighting? false ]
  if random 100 < 1 [ ask ants [ set fighting? false ] ]
end

;; flower procedures ;;
to flowering [some prob] ; adds some flowers to the view at some rate with prob likelihood.

  if random prob < 1
  [
    ask n-of some patches
    [
      sprout-flowers 1
      [
        set shape "flower"
        set size 16
        set color yellow
        ask patch-here
        [
          set is-food? true
          ask neighbors [ set is-food? true ]
        ]
      ]
    ]
  ]
end

;; Procedures for interfacing with touchscreen ;;

to touch-input; handles user touch input for chemicals, flowers, and vinegar
  if mouse-down?
  [
    ask patch mouse-xcor mouse-ycor
    [
    (ifelse
      add = "Chemical"
      [
        ask neighbors [set chemical chemical + 60  ]
      ]
      add = "Flower"
      [
        if not any? flowers in-radius 3  [sprout-flowers 1
          [
            set shape "flower"
            set color yellow
            set size 10
            set is-food? true
            ask neighbors [set is-food? true]
          ]
        ]
      ]
      add = "Vinegar"
      [
        set chemical 0 ask neighbors [set chemical 0  ]
      ]
    )
    ]
  ]
end

to paint-pheromone ; adds pheromone where the user touches the view
  ask patches
  [
    if chemical = 0 and pcolor = 55 or pcolor = 75  [set my-color pcolor]
    if chemical > 10 [set pcolor scale-color pink chemical -11 60]
    ifelse chemical > 2 [] [set pcolor my-color]
  ]
end

to-report blue-build-cost ; the amount the blue colonies need to reproduce one more ant, based on size, aggression and start energy
  let return 0
  set return blue-size / 2 + (blue-aggression / 15) + (blue-start-energy / 1000)
  report return
end

to-report red-build-cost ; the amount the red colonies need to reproduce one more ant, based on size, aggression and start energy
  let return 0
  set return red-size / 2 + (red-aggression / 15) + (red-start-energy / 1000)
  report return
end

to-report demo-shape-case ; set the size and face of the representation in the top left and right of view based on the teams size and aggression.
  let return "sideant"
  let choice red-aggression ; sets red as the default color

  if color = cyan + 2 [ set choice blue-aggression ] ; shifts the blue for the blue display.

  (ifelse  ; case switch statement for graphics that sets the shape in the top left and right based on the team's aggression level.
    choice < 10                  [ set return "sideant" ]
    choice > 10 and choice < 20  [ set return "sideant1" ]
    choice > 19 and choice < 30  [ set return "sideant2" ]
    choice > 29 and choice < 40  [ set return "sideant3" ]
    choice > 39 and choice < 50  [ set return "sideant4" ]
    choice > 49 and choice < 60  [ set return "sideant5" ]
    choice > 59 and choice < 70  [ set return "sideant6" ]
    choice > 69 and choice < 80  [ set return "sideant7" ]
    choice > 79 and choice < 90  [ set return "sideant8" ]
    choice > 89 and choice < 101 [ set return "sideant9" ]
  )
  report return
end

to control-heads-up-display-of-ants ; There are two grey squares that show the changing aggressiveness and size.
                                    ; Here we adjust the size of these to representations based on the size and aggresssion sliders
  ask demos [ifelse color = cyan + 2
    [
      set size blue-size * 2
      set shape demo-shape-case
    ]
    [
      set size red-size * 2
      set shape demo-shape-case
    ]
    ask flowers in-radius 10   ; doesn't allow flowers under the HUD
    [
      ask patch-here
      [
        set is-food? false
        ask neighbors [set is-food? false]
      ]
      die
    ]
  ]
  ask gasters
  [
    ifelse color = cyan
    [
      set size (blue-size * 2 + (blue-start-energy / 10))
    ]
    [
      set size (red-size * 2 + (red-start-energy / 10))
    ]
  ]

end

to  show-nest-food ; places a label on the colonies to show how much food they hold
  ask nests [if food-store >= 0 [ask patch-at 0 -7 [set plabel (word "Stored Food:" " " precision [food-store] of myself  0 )]]]
end

to go-into-nest ; simulate ants entering their nest by hiding them if they are bringing in food, and showing them once they drop it off.
  ask ants [ifelse any? nests in-radius 5 and has-food? = false [hide-turtle] [show-turtle]]
end

; creates the boxes in with ants in them in the upper right and left of the view. These changed based on how the players change their ant's characteristics.
to create-HUD-display-of-ants
  create-demos 2
  [
    set shape demo-shape-case
    set heading 0
    ifelse not any? demos with [color = cyan + 2]
    [
      setxy -63 21
      set size blue-size * 2
      set color cyan + 2
    ]
    [
      setxy 63 21
      set size red-size * 2
      set color red
    ]

    ask flowers in-radius 10
    [
      ask patch-here
      [
        set is-food? false
        ask neighbors [ set is-food? false ]
      ]
      die
    ]
    hatch-boxes 1
    [
      set shape "box2"
      set size 22
      set color grey
    ]
  ]
end


; Copyright 2019 Uri Wilensky.
; See Info tab for full copyright and license.